{
  // GITHUB COPILOT SETTINGS
  "github.copilot.nextEditSuggestions.enabled": true,
  "github.copilot.chat.codesearch.enabled": true,
  "github.copilot.chat.agent.thinkingTool": true,
  "github.copilot.chat.editor.temporalContext.enabled": true,
  "github.copilot.chat.edits.temporalContext.enabled": true,
  "github.copilot.chat.languageContext.fix.typescript.enabled": true,
  "github.copilot.chat.languageContext.inline.typescript.enabled": true,
  "github.copilot.chat.languageContext.typescript.enabled": true,
  "github.copilot.chat.newWorkspace.useContext7": true,
  "github.copilot.chat.languageContext.typescript.cacheTimeout": 1200,
  // VIM SETTINGS
  "vim.foldfix": true,
  "vim.useSystemClipboard": true,
  "vim.handleKeys": {
    "<C-w>": false,
    "<C-s>": false,
    "<C-z>": false
  },
  "vim.insertModeKeyBindingsNonRecursive": [
    // Vim Shortcuts
    {
      "before": ["j", "k"],
      "after": ["<Esc>"]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    // Vim Shortcuts
    {
      "before": ["<Leader>", "l"],
      "after": ["$"]
    },
    {
      "before": ["<Leader>", "h"],
      "after": ["^"]
    },
    {
      "before": ["J"],
      "after": ["5", "j"]
    },
    {
      "before": ["K"],
      "after": ["5", "k"]
    },
    // VSCode Shortcuts
    {
      "before": ["<Leader>", "a"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["<Leader>", "s"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<Leader>", "d"],
      "commands": ["editor.action.duplicateSelection"]
    },
    {
      "before": ["<Leader>", "f"],
      "commands": ["editor.action.formatSelection"]
    },
    {
      "before": ["<Leader>", "u"],
      "commands": ["editor.action.transformToTitlecase"]
    },
    {
      "before": ["<Leader>", "i"],
      "commands": ["workbench.action.toggleEditorWidths"]
    },
    {
      "before": ["<Leader>", "o"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["<Leader>", "p"],
      "commands": ["workbench.action.showCommands"]
    },
    {
      "before": ["<C-j>"],
      "commands": ["editor.action.moveLinesDownAction"]
    },
    {
      "before": ["<C-k>"],
      "commands": ["editor.action.moveLinesUpAction"]
    },
    // Emmet
    {
      "before": ["<Leader>", "e", "b", "i"],
      "commands": ["editor.emmet.action.balanceIn"]
    },
    {
      "before": ["<Leader>", "e", "b", "o"],
      "commands": ["editor.emmet.action.balanceOut"]
    },
    {
      "before": ["<Leader>", "e", "t"],
      "commands": ["editor.emmet.action.matchTag"]
    },
    {
      "before": ["<Leader>", "e", "c"],
      "commands": ["editor.emmet.action.toggleComment"]
    },
    {
      "before": ["<Leader>", "e", "n"],
      "commands": ["editor.emmet.action.selectNextItem"]
    },
    {
      "before": ["<Leader>", "e", "N"],
      "commands": ["editor.emmet.action.selectPrevItem"]
    },
    {
      "before": ["<Leader>", "e", "x"],
      "commands": ["editor.emmet.action.evaluateMathExpression"]
    },
    {
      "before": ["<Leader>", "e", "w"],
      "commands": ["editor.emmet.action.wrapIndividualLinesWithAbbreviation"]
    },
    // Git
    {
      "before": ["<Leader>", "g", "s"],
      "commands": ["git.stageSelectedRanges"]
    },
    {
      "before": ["<Leader>", "g", "u"],
      "commands": ["git.unstageSelectedRanges"]
    },
    {
      "before": ["<Leader>", "g", "r"],
      "commands": ["git.revertSelectedRanges"]
    },
    {
      "before": ["leader", "m", "c", "a"],
      "commands": ["merge-conflict.accept.selection"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    // Vim Shortcuts
    {
      "before": ["J"],
      "after": ["5", "j"]
    },
    {
      "before": ["K"],
      "after": ["5", "k"]
    },
    {
      "before": ["<Leader>", "l"],
      "after": ["$"]
    },
    {
      "before": ["<Leader>", "h"],
      "after": ["^"]
    },
    {
      "before": ["<C-n>"],
      "commands": [":nohl"]
    },
    {
      "before": ["<C-h>"],
      "after": ["<C-w>", "h"]
    },
    {
      "before": ["<C-j>"],
      "after": ["<C-w>", "j"]
    },
    {
      "before": ["<C-k>"],
      "after": ["<C-w>", "k"]
    },
    {
      "before": ["<C-l>"],
      "after": ["<C-w>", "l"]
    },
    // VSCode Shortcuts
    {
      "before": ["<Leader>", "e", "f"],
      "commands": ["workbench.explorer.fileView.focus"]
    },
    {
      "before": ["<Leader>", "a"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["<Leader>", "s", "s"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<Leader>", "d", "s"],
      "commands": ["editor.action.duplicateSelection"]
    },
    {
      "before": ["<Leader>", "f", "d"],
      "commands": ["editor.action.formatDocument"]
    },
    {
      "before": ["<Leader>", "q"],
      "commands": ["workbench.action.closeActiveEditor"]
    },
    {
      "before": ["<Leader>", "w"],
      "commands": ["workbench.action.files.save"]
    },
    {
      "before": ["<Leader>", "r", "s"],
      "commands": ["editor.action.rename"]
    },
    {
      "before": ["<Leader>", "t", "s"],
      "commands": ["workbench.action.gotoSymbol"]
    },
    {
      "before": ["<Leader>", "u"],
      "commands": ["editor.action.transformToTitlecase"]
    },
    {
      "before": ["<Leader>", "i"],
      "commands": ["workbench.action.toggleEditorWidths"]
    },
    {
      "before": ["<Leader>", "o"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["<Leader>", "p"],
      "commands": ["workbench.action.showCommands"]
    },
    {
      "before": ["<Leader>", "m", "n"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["<Leader>", "m", "N"],
      "commands": ["editor.action.marker.prev"]
    },
    {
      "before": ["<Leader>", "t", "r"],
      "commands": ["workbench.action.tasks.reRunTask"]
    },
    {
      "before": ["<Leader>", "t", "c"],
      "commands": ["workbench.action.tasks.configureTaskRunner"]
    },
    {
      "before": ["<Leader>", "n", "h"],
      "commands": ["notifications.hideList"]
    },
    {
      "before": ["<Leader>", "n", "c"],
      "commands": ["notifications.clearAll"]
    },
    {
      "before": ["<Leader>", "n", "f"],
      "commands": ["notifications.focusToasts"]
    },
    {
      "before": ["<Leader>", "n", "s"],
      "commands": ["notifications.showList"]
    },
    {
      "before": ["<Leader>", "g", "l"],
      "commands": ["workbench.action.gotoLine"]
    },
    {
      "before": ["<Leader>", "f", "b"],
      "commands": ["breadcrumbs.focusAndSelect"]
    },
    {
      "before": ["<Leader>", "t", "w"],
      "commands": ["editor.action.toggleWordWrap"]
    },
    // View Commands
    {
      "before": ["<Leader>", "v", "i", "i"],
      "commands": ["workbench.action.increaseViewSize"]
    },
    {
      "before": ["<Leader>", "v", "d", "d"],
      "commands": ["workbench.action.decreaseViewSize"]
    },
    {
      "before": ["<Leader>", "v", "i", "h"],
      "commands": ["workbench.action.increaseViewHeight"]
    },
    {
      "before": ["<Leader>", "v", "d", "h"],
      "commands": ["workbench.action.decreaseViewHeight"]
    },
    {
      "before": ["<Leader>", "v", "i", "w"],
      "commands": ["workbench.action.increaseViewWidth"]
    },
    {
      "before": ["<Leader>", "v", "d", "w"],
      "commands": ["workbench.action.decreaseViewWidth"]
    },
    {
      "before": ["<Leader>", "t", "t"],
      "commands": ["workbench.action.files.newUntitledFile"]
    },
    {
      "before": ["<Leader>", "t", "n"],
      "commands": ["workbench.action.nextEditor"]
    },
    {
      "before": ["<Leader>", "t", "N"],
      "commands": ["workbench.action.previousEditor"]
    },
    {
      "before": ["<Leader>", "v", "g", "j"],
      "commands": ["workbench.action.moveActiveEditorGroupDown"]
    },
    {
      "before": ["<Leader>", "v", "g", "h"],
      "commands": ["workbench.action.moveActiveEditorGroupLeft"]
    },
    {
      "before": ["<Leader>", "v", "g", "l"],
      "commands": ["workbench.action.moveActiveEditorGroupRight"]
    },
    {
      "before": ["<Leader>", "v", "g", "k"],
      "commands": ["workbench.action.moveActiveEditorGroupUp"]
    },
    {
      "before": ["<Leader>", "v", "i", "f"],
      "commands": ["workbench.action.moveEditorToFirstGroup"]
    },
    {
      "before": ["<Leader>", "v", "i", "l"],
      "commands": ["workbench.action.moveEditorToLastGroup"]
    },
    {
      "before": ["<Leader>", "v", "i", "n"],
      "commands": ["workbench.action.moveEditorToNextGroup"]
    },
    {
      "before": ["<Leader>", "v", "i", "p"],
      "commands": ["workbench.action.moveEditorToPreviousGroup"]
    },
    {
      "before": ["<Leader>", "v", "e", "h"],
      "commands": ["workbench.action.moveEditorLeftInGroup"]
    },
    {
      "before": ["<Leader>", "v", "e", "l"],
      "commands": ["workbench.action.moveEditorRightInGroup"]
    },
    {
      "before": ["<Leader>", "c", "e", "g"],
      "commands": ["workbench.action.closeEditorsAndGroup"]
    },
    {
      "before": ["<Leader>", "c", "o", "e"],
      "commands": ["workbench.action.closeOtherEditors"]
    },
    {
      "before": ["<Leader>", "c", "e", "o"],
      "commands": ["workbench.action.closeEditorsInOtherGroups"]
    },
    {
      "before": ["<Leader>", "s", "h"],
      "commands": ["workbench.action.splitEditorLeft"]
    },
    {
      "before": ["<Leader>", "s", "j"],
      "commands": ["workbench.action.splitEditorDown"]
    },
    {
      "before": ["<Leader>", "s", "k"],
      "commands": ["workbench.action.splitEditorUp"]
    },
    {
      "before": ["<Leader>", "s", "l"],
      "commands": ["workbench.action.splitEditorRight"]
    },
    // Emmet Commands
    {
      "before": ["<Leader>", "e", "i", "0"],
      "commands": ["editor.emmet.action.incrementNumberByOneTenth"]
    },
    {
      "before": ["<Leader>", "e", "d", "0"],
      "commands": ["editor.emmet.action.decrementNumberByOneTenth"]
    },
    {
      "before": ["<Leader>", "e", "i", "u"],
      "commands": ["editor.emmet.action.incrementNumberByOne"]
    },
    {
      "before": ["<Leader>", "e", "d", "u"],
      "commands": ["editor.emmet.action.decrementNumberByOne"]
    },
    {
      "before": ["<Leader>", "e", "i", "d"],
      "commands": ["editor.emmet.action.incrementNumberByTen"]
    },
    {
      "before": ["<Leader>", "e", "d", "d"],
      "commands": ["editor.emmet.action.decrementNumberByTen"]
    },
    {
      "before": ["<Leader>", "e", "t"],
      "commands": ["editor.emmet.action.matchTag"]
    },
    {
      "before": ["<Leader>", "e", "n"],
      "commands": ["editor.emmet.action.nextEditPoint"]
    },
    {
      "before": ["<Leader>", "e", "N"],
      "commands": ["editor.emmet.action.prevEditPoint"]
    },
    {
      "before": ["<Leader>", "e", "x"],
      "commands": ["editor.emmet.action.evaluateMathExpression"]
    },
    {
      "before": ["<Leader>", "e", "m", "l"],
      "commands": ["editor.emmet.action.mergeLines"]
    },
    {
      "before": ["<Leader>", "e", "u", "t"],
      "commands": ["editor.emmet.action.updateTag"]
    },
    {
      "before": ["<Leader>", "e", "r", "t"],
      "commands": ["editor.emmet.action.removeTag"]
    },
    {
      "before": ["<Leader>", "e", "s", "j"],
      "commands": ["editor.emmet.action.splitJoinTag"]
    },
    {
      "before": ["<Leader>", "e", "u", "i"],
      "commands": ["editor.emmet.action.updateImageSize"]
    },
    {
      "before": ["<Leader>", "e", "c"],
      "commands": ["editor.emmet.action.toggleComment"]
    },
    {
      "before": ["<Leader>", "e", "r", "c"],
      "commands": ["editor.emmet.action.reflectCSSValue"]
    },
    {
      "before": ["<Leader>", "e", "w"],
      "commands": ["editor.emmet.action.wrapWithAbbreviation"]
    },
    // Git Commands
    {
      "before": ["leader", "g", "g"],
      "commands": ["workbench.scm.focus"]
    },
    {
      "before": ["leader", "g", "t", "l"],
      "commands": ["timeline.focus"]
    },
    {
      "before": ["leader", "g", "i", "r"],
      "commands": ["git.init"]
    },
    {
      "before": ["leader", "g", "a", "i"],
      "commands": ["git.ignore"]
    },
    {
      "before": ["leader", "g", "p", "g"],
      "commands": ["github.publish"]
    },
    {
      "before": ["leader", "g", "a", "r"],
      "commands": ["git.addRemote"]
    },
    {
      "before": ["leader", "g", "r", "r"],
      "commands": ["git.removeRemote"]
    },
    {
      "before": ["leader", "g", "s", "c"],
      "commands": ["git.stage"]
    },
    {
      "before": ["leader", "g", "s", "a", "c"],
      "commands": ["git.stageAll"]
    },
    {
      "before": ["leader", "g", "s", "a", "m"],
      "commands": ["git.stageAllMerge"]
    },
    {
      "before": ["leader", "g", "s", "a", "t"],
      "commands": ["git.stageAllTracked"]
    },
    {
      "before": ["leader", "g", "s", "a", "t"],
      "commands": ["git.stageAllUntracked"]
    },
    {
      "before": ["leader", "g", "u", "c"],
      "commands": ["git.unstage"]
    },
    {
      "before": ["leader", "g", "u", "a", "c"],
      "commands": ["git.unstageAll"]
    },
    {
      "before": ["leader", "g", "c", "m"],
      "commands": ["git.commit"]
    },
    {
      "before": ["leader", "g", "c", "a"],
      "commands": ["git.commitAll"]
    },
    {
      "before": ["leader", "g", "c", "s"],
      "commands": ["git.commitStaged"]
    },
    {
      "before": ["leader", "g", "c", "e"],
      "commands": ["git.commitEmpty"]
    },
    {
      "before": ["leader", "g", "u", "l", "c"],
      "commands": ["git.undoCommit"]
    },
    {
      "before": ["leader", "g", "p", "h"],
      "commands": ["git.push"]
    },
    {
      "before": ["leader", "g", "p", "f"],
      "commands": ["git.pushForce"]
    },
    {
      "before": ["leader", "g", "p", "b", "t"],
      "commands": ["git.pushTo"]
    },
    {
      "before": ["leader", "g", "p", "b", "t", "f"],
      "commands": ["git.pushToForce"]
    },
    {
      "before": ["leader", "g", "p", "l"],
      "commands": ["git.pull"]
    },
    {
      "before": ["leader", "g", "P", "f"],
      "commands": ["git.pullFrom"]
    },
    {
      "before": ["leader", "g", "P", "r"],
      "commands": ["git.pullRebase"]
    },
    {
      "before": ["leader", "g", "A", "r"],
      "commands": ["git.rebaseAbort"]
    },
    {
      "before": ["leader", "g", "c", "b"],
      "commands": ["git.branch"]
    },
    {
      "before": ["leader", "g", "c", "b", "f"],
      "commands": ["git.branchFrom"]
    },
    {
      "before": ["leader", "g", "d", "b"],
      "commands": ["git.deleteBranch"]
    },
    {
      "before": ["leader", "g", "m", "b"],
      "commands": ["git.merge"]
    },
    {
      "before": ["leader", "g", "p", "b"],
      "commands": ["git.publish"]
    },
    {
      "before": ["leader", "g", "r", "b"],
      "commands": ["git.renameBranch"]
    },
    {
      "before": ["leader", "g", "R", "b"],
      "commands": ["git.rebase"]
    },
    {
      "before": ["leader", "g", "C"],
      "commands": ["git.checkout"]
    },
    {
      "before": ["leader", "g", "C", "d"],
      "commands": ["git.checkoutDetached"]
    },
    {
      "before": ["leader", "g", "c", "p"],
      "commands": ["git.cherryPick"]
    },
    {
      "before": ["leader", "g", "d", "c"],
      "commands": ["git.clean"]
    },
    {
      "before": ["leader", "g", "d", "a", "c"],
      "commands": ["git.cleanAll"]
    },
    {
      "before": ["leader", "g", "d", "a", "t"],
      "commands": ["git.cleanAllTracked"]
    },
    {
      "before": ["leader", "g", "d", "a", "u"],
      "commands": ["git.cleanAllUntracked"]
    },
    {
      "before": ["leader", "g", "s", "s"],
      "commands": ["git.stash"]
    },
    {
      "before": ["leader", "g", "s", "i", "u"],
      "commands": ["git.stashIncludeUntracked"]
    },
    {
      "before": ["leader", "g", "a", "s"],
      "commands": ["git.stashApply"]
    },
    {
      "before": ["leader", "g", "a", "l", "s"],
      "commands": ["git.stashApplyLatest"]
    },
    {
      "before": ["leader", "g", "d", "s"],
      "commands": ["git.stashDrop"]
    },
    {
      "before": ["leader", "g", "p", "s"],
      "commands": ["git.stashPop"]
    },
    {
      "before": ["leader", "g", "p", "l", "s"],
      "commands": ["git.stashPopLatest"]
    },
    {
      "before": ["leader", "g", "c", "t"],
      "commands": ["git.createTag"]
    },
    {
      "before": ["leader", "g", "d", "t"],
      "commands": ["git.deleteTag"]
    },
    {
      "before": ["leader", "g", "p", "t"],
      "commands": ["git.pushTags"]
    },
    {
      "before": ["leader", "g", "f", "f"],
      "commands": ["git.fetch"]
    },
    {
      "before": ["leader", "g", "f", "p"],
      "commands": ["git.fetchPrune"]
    },
    {
      "before": ["leader", "g", "f", "f", "a", "r"],
      "commands": ["git.fetchAll"]
    },
    {
      "before": ["leader", "g", "o", "c"],
      "commands": ["git.openChange"]
    },
    {
      "before": ["leader", "g", "o", "f"],
      "commands": ["git.openFile"]
    },
    {
      "before": ["leader", "g", "s", "n"],
      "commands": ["editor.action.dirtydiff.next"]
    },
    {
      "before": ["leader", "g", "s", "N"],
      "commands": ["editor.action.dirtydiff.previous"]
    },
    {
      "before": ["leader", "g", "m", "n"],
      "commands": ["workbench.action.editor.nextChange"]
    },
    {
      "before": ["leader", "g", "m", "N"],
      "commands": ["workbench.action.editor.previousChange"]
    },
    {
      "before": ["leader", "g", "c", "n"],
      "commands": ["workbench.action.compareEditor.nextChange"]
    },
    {
      "before": ["leader", "g", "c", "N"],
      "commands": ["workbench.action.compareEditor.previousChange"]
    },
    {
      "before": ["leader", "g", "i", "v"],
      "commands": ["toggle.diff.renderSideBySide"]
    },
    {
      "before": ["leader", "m", "c", "b"],
      "commands": ["merge-conflict.accept.both"]
    },
    {
      "before": ["leader", "m", "c", "c"],
      "commands": ["merge-conflict.accept.current"]
    },
    {
      "before": ["leader", "m", "c", "i"],
      "commands": ["merge-conflict.accept.incoming"]
    },
    {
      "before": ["leader", "m", "c", "a", "b"],
      "commands": ["merge-conflict.accept.all-both"]
    },
    {
      "before": ["leader", "m", "c", "a", "c"],
      "commands": ["merge-conflict.accept.all-current"]
    },
    {
      "before": ["leader", "m", "c", "a", "i"],
      "commands": ["merge-conflict.accept.all-incoming"]
    },
    {
      "before": ["leader", "m", "c", "o"],
      "commands": ["merge-conflict.compare"]
    },
    {
      "before": ["leader", "m", "c", "n"],
      "commands": ["merge-conflict.next"]
    },
    {
      "before": ["leader", "m", "c", "N"],
      "commands": ["merge-conflict.previous"]
    },
    // Debug Commands
    {
      "before": ["<Leader>", "d", "f"],
      "commands": ["workbench.view.debug"]
    },
    {
      "before": ["<Leader>", "d", "c"],
      "commands": ["workbench.action.debug.continue"]
    },
    {
      "before": ["<Leader>", "d", "p"],
      "commands": ["workbench.action.debug.pause"]
    },
    {
      "before": ["<Leader>", "d", "r"],
      "commands": ["workbench.action.debug.restart"]
    },
    {
      "before": ["<Leader>", "d", "h"],
      "commands": ["editor.debug.action.showDebugHover"]
    },
    {
      "before": ["<Leader>", "d", "s"],
      "commands": ["workbench.action.debug.start"]
    },
    {
      "before": ["<Leader>", "d", "i"],
      "commands": ["workbench.action.debug.stepInto"]
    },
    {
      "before": ["<Leader>", "d", "u"],
      "commands": ["workbench.action.debug.stepOut"]
    },
    {
      "before": ["<Leader>", "d", "o"],
      "commands": ["workbench.action.debug.stepOver"]
    },
    {
      "before": ["<Leader>", "d", "b"],
      "commands": ["editor.debug.action.toggleBreakpoint"]
    },
    {
      "before": ["<Leader>", "d", "x"],
      "commands": ["workbench.action.debug.stop"]
    },
    {
      "before": ["<Leader>", "d", "a", "l"],
      "commands": ["editor.debug.action.addLogPoint"]
    },
    {
      "before": ["<Leader>", "d", "a", "f"],
      "commands": ["workbench.debug.viewlet.action.addFunctionBreakpointAction"]
    },
    {
      "before": ["<Leader>", "d", "a", "c"],
      "commands": ["editor.debug.action.conditionalBreakpoint"]
    },
    {
      "before": ["<Leader>", "d", "a", "i"],
      "commands": ["editor.debug.action.toggleInlineBreakpoint"]
    },
    {
      "before": ["<Leader>", "d", "e", "b"],
      "commands": ["workbench.debug.viewlet.action.enableAllBreakpoints"]
    },
    {
      "before": ["<Leader>", "d", "d", "b"],
      "commands": ["workbench.debug.viewlet.action.disableAllBreakpoints"]
    },
    {
      "before": ["<Leader>", "d", "r", "b"],
      "commands": ["workbench.debug.viewlet.action.removeAllBreakpoints"]
    },
    {
      "before": ["<Leader>", "d", "n"],
      "commands": ["editor.debug.action.goToNextBreakpoint"]
    },
    {
      "before": ["<Leader>", "d", "N"],
      "commands": ["editor.debug.action.goToPreviousBreakpoint"]
    }
  ],
  // FILE SETTINGS
  "files.autoSave": "onFocusChange",
  //  EDITOR SETTINGS
  "editor.formatOnSave": true,
  "editor.wordWrap": "wordWrapColumn",
  "editor.fontFamily": "'JetBrainsMono Nerd Font', 'Courier New', monospace",
  "editor.fontLigatures": true,
  "editor.fontSize": 14,
  "editor.lineHeight": 22,
  "editor.tabSize": 2,
  "editor.minimap.enabled": true,
  "editor.minimap.renderCharacters": false,
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.cursorBlinking": "smooth",
  "editor.smoothScrolling": true,
  "editor.renderWhitespace": "all",
  "editor.lineNumbers": "relative",
  "editor.guides.bracketPairs": "active",
  "editor.rulers": [80, 120],
  "editor.hover.sticky": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": "never",
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "never"
  },
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.go": "$(capture)_test.go",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.xaml": "$(capture).xaml.cs",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "//": "Last update at 4/29/2023, 2:04:58 PM",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
    "I*.cs": "$(capture).cs",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "go.work": "go.work.sum",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
  },
  // WORKBENCH SETTINGS
  "workbench.iconTheme": "file-icons",
  "workbench.colorTheme": "One Dark Pro Flat",
  "workbench.activityBar.location": "top",
  "workbench.list.smoothScrolling": true,
  "workbench.startupEditor": "none",
  // GITHUB LENS SETTINGS
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "git.untrackedChanges": "separate",
  "scm.diffDecorationsGutterWidth": 2,
  "emmet.showSuggestionsAsSnippets": true,
  "emmet.triggerExpansionOnTab": false,
  "errorLens.enabledDiagnosticLevels": ["warning", "error"],
  "errorLens.excludeBySource": ["cSpell", "Grammarly", "eslint"],
  "githubIssues.workingIssueFormatScm": "#${issueNumberLabel}",
  "githubPullRequests.fileListLayout": "tree",
  "gitlens.codeLens.authors.enabled": false,
  "gitlens.codeLens.enabled": false,
  "gitlens.codeLens.recentChange.enabled": false,
  "gitlens.menus": {
    "editor": {
      "blame": false,
      "clipboard": true,
      "compare": true,
      "history": false,
      "remote": false
    },
    "editorGroup": {
      "blame": true,
      "compare": false
    },
    "editorTab": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "explorer": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "scm": {
      "authors": true
    },
    "scmGroup": {
      "compare": true,
      "openClose": true,
      "stash": true
    },
    "scmGroupInline": {
      "stash": true
    },
    "scmItem": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": false,
      "stash": true
    }
  },
  // FORMATTER SETTINGS (PRETTIER, ESLINT)
  "eslint.codeAction.showDocumentation": {
    "enable": true
  },
  "eslint.quiet": true,
  // TERMINAL SETTINGS
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.fontWeight": "300",
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "terminal.integrated.tabs.enabled": true,
  "terminal.integrated.tabs.showActiveTerminal": "always",
  // OTHER SETTINGS
  "search.exclude": {
    "**/*.snap": true,
    "**/*.svg": true,
    "**/.git": true,
    "**/.github": false,
    "**/.nuxt": true,
    "**/.output": true,
    "**/.pnpm": true,
    "**/.vscode": true,
    "**/.yarn": true,
    "**/assets": true,
    "**/bower_components": true,
    "**/dist/**": true,
    "**/logs": true,
    "**/node_modules": true,
    "**/out/**": true,
    "**/package-lock.json": true,
    "**/pnpm-lock.yaml": true,
    "**/public": true,
    "**/temp": true,
    "**/yarn.lock": true,
    "**/CHANGELOG*": true,
    "**/LICENSE*": true
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  }
}
